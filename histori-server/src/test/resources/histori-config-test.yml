# Things in {{CURLIES}} will be read from the process environment when the server starts up.
# The jrun launcher will typically load these from ~/.cloudos.env

serverName: histori-api

# This is set in ApiClientTestBase.onStart, after the random listen port has been selected
#publicUriBase: http://127.0.0.1
#publicUriBase: {{PUBLIC_BASE_URI}}

database:
  driver: org.postgresql.Driver
  url: jdbc:postgresql://127.0.0.1:5432/histori_test
  user: histori
  password: {{HISTORI_DB_PASS}}

  encryptionEnabled: true
  encryptionKey: '{{HISTORI_DB_ENCRYPTION_KEY}}'
  encryptorPoolSize: 5

  hibernate:
    entityPackages:
    - histori.model
    - org.cobbzilla.wizard.model.crypto   # for encrypted column support
    dialect: org.hibernate.dialect.PostgreSQLDialect
    showSql: true
    hbm2ddlAuto: create
    validationMode: ddl

  shard:
    - name: histori-account
      entity: histori.model.Account
    - name: bookmark
      entity: histori.model.Bookmark
    - name: super-nexus
      entity: histori.model.SuperNexus
    - name: nexus
      entity: histori.model.Nexus
    - name: nexus-archive
      entity: histori.model.archive.NexusArchive
    - name: permalink
      entity: histori.model.Permalink
    - name: tag
      entity: histori.model.Tag
    - name: vote
      entity: histori.model.Vote
    - name: vote-archive
      entity: histori.model.archive.VoteArchive

staticAssets:
  baseUri: /
  assetRoot: site/
#  localOverride: {{ASSETS_DIR}}
  mustacheCacheEnabled: false
  mustacheResourceRoot: site/
  utilPaths:
    INDEX_PATH: /index.html
    INDEX_ALIASES: /:/index.php
    LOCALIZE: /localize
  substitutions:
    /signup.html:
      recaptcha: {{RECAPTCHA_PUBLIC_KEY}}

http:
  port: 0
  baseUri: /api

jersey:
  resourcePackages: [ histori.resources, org.cobbzilla.wizard.server, org.cobbzilla.wizard.filters, org.cobbzilla.wizard.exceptionmappers ]
  requestFilters: [ histori.auth.HistoriAuthFilter ]
  responseFilters: [ org.cobbzilla.wizard.filters.ScrubbableScrubber ]

emailTemplateRoot: {{EMAIL_TEMPLATE_ROOT}}

emailSenderNames:
  welcome:
    fromName:  Hello from Histori
    fromEmail: do-not-reply@histori.city
  reset_password:
    fromName: Histori Password Helper
    fromEmail: do-not-reply@histori.city

smtp:
  host: 127.0.0.1
  user: bogus
  password: bogus
  tlsEnabled: true

redis:
  key: '{{HISTORI_REDIS_ENCRYPTION_KEY}}'
  prefix: histori

assetStorage:
  type: local
  config:
    baseDir: /tmp/histori-assets

recaptcha:
  publicKey: {{RECAPTCHA_PUBLIC_KEY}}
  privateKey: {{RECAPTCHA_PRIVATE_KEY}}
